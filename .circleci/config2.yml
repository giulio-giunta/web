# This code is licensed from CircleCI to the user under the MIT license.
# See here for details: https://circleci.com/developer/orbs/licensing
# This code is licensed from CircleCI to the user under the MIT license. See
# https://circleci.com/orbs/registry/licensing for details.
# Part of this code came from https://circleci.com/orbs/registry/orb/corballis/sonarqube-analyzer
version: 2.1
description: "This orb measures code quality using SonarQube server and fails the build when the predefined quality gate has broken. Default sonarScanner is used to execute analysis. The script runs with zero tolerancy in terms of errors. If any error found during the analysis the build will fail."
commands:
  check-code-quality:
    description: Check Code Quality
    parameters:
        sonar_server_url:
            type: string
            description: "URL of your SonarQube server. e.g.: http://my.sonarqube,server:9000"
            default: "$SONAR_SERVER"
        sonar_login:
            description: "Authentication key (sonar.login paramter) to access SonarQube and perform analysis"
            type: string
            default: "$SONAR_TOKEN"
        sonar_sources:
            description: "Where the files are located?"
            type: string
            default: "$SONAR_SOURCES"
    steps:
    - run:
        name: Install Sonarqube scanner
        command: |
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.2.0.1873.zip
            unzip sonar-scanner-cli-4.2.0.1873.zip

    - run:
        name: Run Sonarscanner
        command: |
            export SONAR_SCANNER_OPTS="-Xmx2048m"
            eval ./sonar-scanner-4.2.0.1873/bin/sonar-scanner -Dsonar.host.url=<< parameters.sonar_server_url >> \
            -Dsonar.sources=<< parameters.sonar_sources >> \
            -Dsonar.login=<< parameters.sonar_login >>

orbs: 
  sonarscanner: psl/sonarscanner@0.0.4
